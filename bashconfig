# custom maven dir
# export M2_HOME=""
# m2 dir
# export M2=""
# export PATH="$M2:$PATH"
# java opts and maven opts for local trusture keys and so on
# MAVEN_OPTS="-Djavax.net.ssl.trustStoreTypes=jks -Djavax.net.ssl.trustStor=keystore.jks -Djavax.net.ssl.trustStorePassword=changeit"
# JAVA_OPTS=""

# aliases

#tomcat
alias tomcatrun='$CATALINA_HOME/bin/startup.bat'

#misc
alias ll='ls -alh'

# maven shortcuts
mci() {
  mvn clean install
}
mcint() {
  mvn clean install -DskipTests
}


# git shortcuts

gcf() {
  git checkout -b "feature/$1"
}

gc() {
  git checkout "$1"
}

gcp() {
  git commit -am "$1"
  git push origin HEAD
}

#list branches in case there is no argument, if there is a numeric argument checkout to the branch under given number
gbs() {
  # Get all branch names and store them in an array
  branches=($(git branch --format="%(refname:short)"))

  # If no argument is passed, list all branches
  if [ -z "$1" ]; then
    for i in "${!branches[@]}"; do
      echo "[$((i+1))] ${branches[$i]}"
    done
  # If a numeric argument is passed, checkout the corresponding branch
  elif [[ "$1" =~ ^[0-9]+$ ]]; then
    branch_index=$(($1 - 1))
    
    # Check if the index is within the range
    if [ "$branch_index" -ge 0 ] && [ "$branch_index" -lt "${#branches[@]}" ]; then
      git checkout "${branches[$branch_index]}"
    else
      echo "Error: Invalid branch number."
    fi
  else
    echo "Error: Argument must be a number."
  fi
}

